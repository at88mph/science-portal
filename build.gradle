import org.apache.tools.ant.filters.ReplaceTokens


plugins {
    id 'war'
    id "com.github.node-gradle.node" version "3.0.1"

    // IntelliJ IDEA plugin here to allow integration tests to appear properly in IDEs.
    id 'idea'

    id 'com.diffplug.spotless' version '6.25.0'
    id 'jacoco'
}

node {
    version = '22.11.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'com.opencsv:opencsv:[5.1,6.0)'
    implementation 'commons-net:commons-net:3.9.0'
    implementation 'org.apache.commons:commons-configuration2:[2.11.0,3.0.0)'
    implementation 'org.opencadc:cadc-access-control-identity:[1.1.0,)'
    implementation 'org.opencadc:cadc-gms:[1.0.12,2.0)'
    implementation 'org.opencadc:cadc-log:[1.1.5,)'
    implementation 'org.opencadc:cadc-rest:[1.3.9,)'
    implementation 'org.opencadc:cadc-util:[1.6,)'
    implementation 'org.opencadc:cadc-web-token:[1.1.1,2.0.0)'

    runtimeOnly 'commons-io:commons-io:[2.17.0,3.0.0)'
    runtimeOnly 'javax.servlet.jsp.jstl:jstl-api:1.2'
    runtimeOnly 'javax.servlet:jstl:1.2'
    runtimeOnly 'jstl:jstl:[1.0,)'
    runtimeOnly 'org.apache.taglibs:taglibs-standard-impl:1.2.5'

    testImplementation 'junit:junit:[4.12,5.0)'
    testImplementation 'org.mockito:mockito-core:[5.14.0,6.0.0)'
}

sourceCompatibility = '1.8'

war {
    // Trying to fix static file caching on new build.
    eachFile {
        if (it.name.endsWith('.jsp')) {
            filter(ReplaceTokens, tokens: [version: project.version])
        }
    }

    archiveName 'science-portal.war'
}

tasks.register('buildReactApp', NodeTask) {
    dependsOn 'npmInstall'
    script = project.file('node_modules/webpack/bin/webpack.js')
    args = [
            '--mode', 'development',
            '--entry', './src/index.js',
            '-o', './src/main/webapp/dist'
    ]
}

// Copy js and json files from dev working area to distribution assembly folder
tasks.register('copyDevToDist', Copy) {
    from layout.projectDirectory.file("public/dev")
    into layout.projectDirectory.file("src/main/webapp/dist")
}

processResources.dependsOn 'buildReactApp'
assemble.dependsOn 'copyDevToDist'

clean.delete << file('src/main/webapp/dist')
